#!/bin/bash

# set -e -o pipefail

timeout="$1"
shift
( export mainpid=$$
  script=$(cat <<'EOF'
exit_if_not_alive() {
    local state="$(ps -p $mainpid -o stat=)"
    local ret=$?
    # don't get why ps doesn't return 1 sometimes
    if [ $ret -ne 0 ] || grep -q 'Z\|^$' <<< "$state"; then
        exit 0;
    fi
}
while :; do
  exit_if_not_alive
  sleep 0.001;
done;
EOF
  )
  timeout ${timeout}s bash -c "$script"
  if [ $? = 124 ]; then
    echo Timeout after "$timeout"s;
    echo
    # Showing some information, to help debug commands that get stuck in hydra
    com=(gdb /proc/$mainpid/exe $mainpid -batch -ex 'thread apply all bt')
    echo '$' "${com[@]}"
    "${com[@]}" < /dev/null
    echo
    echo '$' ls -l /proc/$mainpid/fd
    ls -l /proc/$mainpid/fd
    echo
    echo '$' ps ufx '#' process is $mainpid
    ps ufx
    echo
    # We straight up use KILL on strace, for simplicity given that it shouldn't have any
    # resources to release, and at least some of the times, it doesn't die on SIGINT.
    echo "\$ strace -s500 -f -p $mainpid & { sleep 1; kill -KILL \$!; }"
    strace -s500 -f -p $mainpid & { sleep 1; kill -KILL $!; }
    kill $mainpid
    sleep 2
    kill -KILL $mainpid 2> /dev/null
  fi
) &

exec "$@"
